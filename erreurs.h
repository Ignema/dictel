#ifndef ERREURS_H_INCLUDED
#define ERREURS_H_INCLUDED
#include <stdio.h>
#include <stdlib.h>

/****************DECLARATION DES TYPES DES ERREURS************************/
typedef enum {
   CAR_INC_ERR,FIC_VID_ERR,PROGRAM_ERR,ID_ERR,PTVIR_ERR,PT_ERR,EG_ERR,NUM_ERR,CONSTS_ERR,VARS_ERR,
   BEGIN_ERR,END_ERR,INST_ERR,AFFEC_ERR,IF_ERR,THEN_ERR,WHILE_ERR,DO_ERR,WRITE_ERR,PO_ERR,
   PF_ERR,READ_ERR,RELOP_ERR,FACT_ERR,EOF_ERR,UNDECLARED_ID_ERR,DOUBLE_DECLARATION,UNAUTORISER_PROGRAM_ID_ERR,
   CONST_VALUE_CHANGE_ERR,CASE_ERR,OF_ERR,ELSE_ERR,REPEAT_ERR, UNTIL_ERR,FOR_ERR,TO_ERR,DOWNTO_ERR
} CODES_ERR ;

typedef struct {
CODES_ERR code;// contient le token du symbole
char message_err[40];// contient la forme textuelle du symbole
}ERREUR;
void ERREUR_LEXICAL(CODES_ERR CODE);///AFFICHAGE DU MESSAGE D'ERREUR ASSOCIE A UN CODE D'ERREUR ET STOP PROGRAM
void ERREUR_SANTAXIQUE(CODES_ERR CODE);///AFFICHAGE DU MESSAGE D'ERREUR ASSOCIE A UN CODE D'ERREUR ET STOP PROGRAM

#endif // ERREURS_H_INCLUDED
